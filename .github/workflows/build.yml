name: Build and Release Debian Package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create GitHub release'
        required: false
        default: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y dpkg-dev lintian
    
    - name: Extract package info
      id: package_info
      run: |
        if [[ "${{ github.ref }}" =~ refs/tags/v(.+)-([0-9]+) ]]; then
          # Tag format: v2025.8.0-1
          UPSTREAM_VERSION="${BASH_REMATCH[1]}"
          DEBIAN_REVISION="${BASH_REMATCH[2]}"
        elif [[ "${{ github.ref }}" =~ refs/tags/v(.+) ]]; then
          # Tag format: v2025.8.0 (default to revision 1)
          UPSTREAM_VERSION="${BASH_REMATCH[1]}"
          DEBIAN_REVISION="1"
        else
          # Development build
          UPSTREAM_VERSION="dev-$(date +%Y%m%d)"
          DEBIAN_REVISION="$(git rev-parse --short HEAD)"
        fi
        
        FULL_VERSION="${UPSTREAM_VERSION}-${DEBIAN_REVISION}"
        PACKAGE_NAME=$(grep "^Package:" deb/DEBIAN/control | cut -d' ' -f2)
        
        echo "upstream_version=$UPSTREAM_VERSION" >> $GITHUB_OUTPUT
        echo "debian_revision=$DEBIAN_REVISION" >> $GITHUB_OUTPUT
        echo "version=$FULL_VERSION" >> $GITHUB_OUTPUT
        echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
        echo "deb_file=${PACKAGE_NAME}_${FULL_VERSION}_all.deb" >> $GITHUB_OUTPUT
    
    - name: Build package
      env:
        UPSTREAM_VERSION: ${{ steps.package_info.outputs.upstream_version }}
        DEBIAN_REVISION: ${{ steps.package_info.outputs.debian_revision }}
      run: make build
    
    - name: Validate package
      env:
        UPSTREAM_VERSION: ${{ steps.package_info.outputs.upstream_version }}
        DEBIAN_REVISION: ${{ steps.package_info.outputs.debian_revision }}
      run: make validate
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: debian-package
        path: "*.deb"
        retention-days: 30
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/') || (github.event_name == 'workflow_dispatch' && inputs.create_release)
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name || format('v{0}', steps.package_info.outputs.version) }}
        name: Release ${{ steps.package_info.outputs.version }}
        body: |
          ## Bitwarden CLI Debian Package v${{ steps.package_info.outputs.version }}
          
          ### Installation
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name || format('v{0}', steps.package_info.outputs.version) }}/${{ steps.package_info.outputs.deb_file }}
          sudo dpkg -i ${{ steps.package_info.outputs.deb_file }}
          ```
          
          ### Usage
          ```bash
          bw --help
          ```
          
          ### Changes
          - Updated to version ${{ steps.package_info.outputs.version }}
        files: |
          *.deb
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}